# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
   include:
     - master
  tags:
    include:
    - v2.*


pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'f5networks/k8s-bigip-ctlr-devel'
  quayConnection: 'quay-bot'
  redhatConnection: 'redhat-bot'
  quay_path: 'quay.io/sravyap135/k8s-bigip-ctlr'
  quay_tag: 'latest'
  redhat_prj_name: 'cntr-ingress-svcs'
  redhat_prj_id: 'ospid-97f1d737-c6a7-48e8-9767-15adab474ce8'
  docker_repo: 'sraf5/k8s-bigip-ctlr'
  docker_version: 'reltest'



    # - script: | 
    #     podman login -u unused -p $(redhatp) scan.connect.redhat.com
    #     podman pull $(quay_path):$(quay_tag)
    #     podman tag $(quay_path):$(quay_tag) scan.connect.redhat.com/$(redhat_prj_id)/$(redhat_prj_name):$(redhat_tag)
    #     podman push scan.connect.redhat.com/$(redhat_prj_id)/$(redhat_prj_name):$(redhat_tag)
    #   displayName: 'Push to Redhat'

    # - script: |
    #     docker login https://quay.io
    #     docker pull ${quay_path}:${quay_tag}
    #     docker tag ${quay_path}:${quay_tag} ${docker_repo}:latest
    #     docker tag ${quay_path}:${quay_tag} ${docker_repo}:${docker_version}
    #     if [[ ${docker_version: -1} -eq 0 ]] ; then docker tag ${quay_path}:${quay_tag} ${docker_repo}:${docker_version:0:${#docker_version}-2} ; fi
    #     docker push ${docker_repo}:${docker_version}
    #   displayName: 'Push to DockerHub'
    #   continueOnError: false


- task: Docker@2
  displayName: Login to redhat registry
  inputs:
    command: login
    containerRegistry: $(redhatConnection)
- task: Docker@2
  displayName: Login to quay registry
  inputs:
    command: login
    containerRegistry: $(quayConnection)
- task: CmdLine@2
  displayName: Check documentation
  inputs:
    script: 'make docs'
- task: Docker@2
  displayName: Build from Red Hat Universal Base Image
  inputs:
    command: build
    containerRegistry: $(quayConnection)
    repository: $(imageName)
    Dockerfile: build-tools/Dockerfile-int
    buildContext: .
    tags: $(Build.SourceVersion)
    arguments: "--build-arg BUILD_INFO=azure-$(Build.BuildId)-$(Build.SourceVersion) --build-arg BUILD_VERSION=$(BUILD_VERSION) --build-arg RUN_TESTS=$(RUN_TESTS)"
- task: Docker@2
  displayName: Push image to quay.io
  inputs:
    command: push
    containerRegistry: $(quayConnection)
    repository: $(imageName)
    tags: $(Build.SourceVersion)
